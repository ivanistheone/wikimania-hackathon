version: "2"



volumes:
  postgres_data: {}
  cc_storage: {}            # storage dir for
  kolibri_storage: {}


services:

  # KOLIBRI CONTENT CURATION SERVER
  ##############################################################################

  ccpostgres:
    container_name: ccserver-postgres
    image: postgres:9.6
    volumes:
      - postgres_data:/var/lib/postgresql/data
    env_file: ./credentials/hackathon.env

  content-curation:
    build:
      context: ./content-curation
      dockerfile: ./Dockerfile
    expose:
      - "8000"
    volumes:
      - cc_storage:/contentcuration/storage
    depends_on:
      - ccpostgres
    # env_file: ./credentials/hackathon.env


  # KOLIBRI
  ##############################################################################



  # django-asgi:
  #   container_name: django-asgi
  #   build:
  #     context: .
  #     dockerfile: ./compose/django/Dockerfile-prod
  #   expose:
  #     - "6000"
  #   depends_on:
  #     - redis
  #   command: /start_daphne.sh
  #   env_file: ./credentials/production.env
  #   environment:
  #     - VIRTUAL_HOST=sushibar.learningequality.org
  #     - VIRTUAL_NETWORK=sushibar_default
  #     - VIRTUAL_PORT=6000
  #     - ASGI_UPSTREAM_NAME=sushibar_asgi_upstream
  #     - VIRTUAL_PROTO=http
  #     - HTTPS_METHOD=noredirect

  # asgi-worker:
  #   container_name: asgi-worker
  #   build:
  #     context: .
  #     dockerfile: ./compose/django/Dockerfile-prod
  #   volumes:
  #     - media:/media
  #   depends_on:
  #     - redis
  #   command: /start_worker.sh
  #   env_file: ./credentials/production.env




  # nginx:
  #   restart: always
  #   image: nginx
  #   container_name: nginx
  #   depends_on:
  #     - django-asgi
  #   ports:
  #     - "80:80"
  #     - "443:443"
  #   volumes:
  #     - static:/static
  #     - media:/media
  #     - "/etc/nginx/conf.d"
  #     - "/etc/nginx/vhost.d"
  #     - "/usr/share/nginx/html"
  #     - "./volumes/proxy/certs:/etc/nginx/certs:ro"
  #
  # nginx-gen:
  #   restart: always
  #   build: ./compose/nginx-gen
  #   container_name: nginx-gen
  #   depends_on:
  #     - nginx
  #   volumes:
  #     - "/var/run/docker.sock:/tmp/docker.sock:ro"
  #   volumes_from:
  #     - nginx
  #   entrypoint: /usr/local/bin/docker-gen -notify-sighup nginx -watch -wait 5s:30s /etc/docker-gen/templates/nginx.tmpl /etc/nginx/conf.d/default.conf
  #
  # letsencrypt-companion:
  #   restart: always
  #   image: jrcs/letsencrypt-nginx-proxy-companion
  #   container_name: letsencrypt-companion
  #   depends_on:
  #     - nginx
  #     - nginx-gen
  #   volumes_from:
  #     - nginx
  #   volumes:
  #     - "/var/run/docker.sock:/var/run/docker.sock:ro"
  #     - "./volumes/proxy/certs:/etc/nginx/certs:rw"
  #   environment:
  #     - NGINX_DOCKER_GEN_CONTAINER=nginx-gen


